New declarations

Borders

<div class="box">
	<h2>This is a box</h2>
</div>

.box {
	border-width: 1px; /* All four sides are the same */
	border-width: 1px 2px 3px 4px; /* Different widths per side */
	/* Top, right, bottom, left */
	border-style: solid;
	border-color: red;
	padding: 15px;
}

There is a quicker way

.box {
	border: 1px solid red;
	padding: 15px;
}

Bottom borders and margins

nav {
	border-bottom: 2px solid red;
	padding: 10px 0; /* Top and bottom are 10, left and right are 0 */
	margin-bottom: 30px; /* Adds some space down below */
}

Border radius

#example1 {
  border: 2px solid red;
  border-radius: 25px;		/* All corners */
}

#example2 {
  border: 2px solid red;
  border-radius: 50px 20px;	/* TL/BR corners and TR/BL corners */
}

Inline tags vs block tags

Block tags will always start on a new line and will always take up the full width available
Inline tags will ignore width and height styling, unless using display:inline-block

Image formats

.jpg	Pros - relatively small filesize, support 16.7mil colors, very common
	Cons - lossy; compression artifacts, don't support transparency
	Good to use on a web page if there's no need for transparency

.png	Pros - supports transparency, millions of colors, lossless
	Cons - large filesize
	Best to use when transparency is needed

.gif	Pros - supports animation and transparency
	Cons - Only supports 256 colors, larger filesize, dithering
	Only helpful when animation is needed

.svg	Pros - small filesize, scalable ("scalable vector graphic")
	Cons - difficult to create
	Mostly used for simple things like logos

.webp	Pros - supports transparency, millions of colors, relatively small filesize
	Cons - newer, and not supported by all browsers
	Can replace most other image formats

Good rule of thumb is to keep images below 1MB. Otherwise your page will load very slowly.
compressor.io is helpful

<img src="Images/IMG_7283.jpg" alt="Mountain Dew Can">

img {
	width:100% /* Constrain the image so it can't break out of any wrappers */
}

Figure Captions

<figure>
    <img src="/media/cc0-images/elephant-660-480.jpg"
         alt="Elephant at sunset">
    <figcaption>An elephant at sunset</figcaption>
</figure>

Hero tags

in CSS
#hero{
	background-image: url('Images/IMG_7283.jpg')
	background-size: contain; /* Usually leaves a lot of whitespace */
	background-size: cover;
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-attachment: fixed;
	width: 100%;	/* Does not have a default size; must be set */
	height: 500px;
}

Using an image as a link

<a href="link address"><img src="image destination"></a>

Image Map

<img src="workplace.jpg" alt="Workplace" usemap="#workmap">

<map name="workmap">
  <area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
  <area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
  <area shape="circle" coords="337,300,44" alt="Coffee" href="coffee.htm">
</map>

Used to turn specific areas of an image into clickable links

Fav Icon
The little icon next to the website name at the top of the browser
https://favicomatic.com/

<link rel="icon" type="image/png" href="favicon-32x32.png" sizes="32x32" />
<link rel="icon" type="image/png" href="favicon-16x16.png" sizes="16x16" />

HSLA
hsla() function
Hue-saturation-lightness-alpha

Gradients
Examples:

#grad {
  background-image: linear-gradient(red, yellow); /* Top to bottom by default */
}

#grad {
  background-image: linear-gradient(to right, red , yellow);
}

#grad {
  background-image: linear-gradient(to bottom right, red, yellow);
}

#grad {
  background-image: linear-gradient(45deg, red, yellow, green);
}

#grad {
  background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1)); /* Alpha transparency */
}

#grad {
  background-image: repeating-linear-gradient(red, yellow 10%, green 20%);
}
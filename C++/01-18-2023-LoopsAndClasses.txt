#include "functions.h"
#include <iostream>

int main() {
	return guess_my_number(std::cin, std:cout);
}

// We want to allow the user 10 attempts to guess the number before they fail.

// For loops in C++:

// for(initialization; condition; incrementation)
// initialization - once
// check if condition is true
//	execute the body of the loop
//	increment
//	check condition again

for(attempt = 0; attempt < 10; attempt++) {
	// body
}

// If statements
// Use "else if" instead of "elif"

if(your_number < my_number) {
	os << "Too low." << std::endl;
} else if(your_number > my_number) {
	os << "Too high." << std::endl;
} else {
	os << "Correct" << std:: endl;
	break;
}

echo $?
check the return value immediately after the program closes

A class has data members and methods (functions) that operate
specifically on instances of the class.

For example, take a Fraction class that takes two integers
and whose methods are add, subtract, multiply, and divide.

#ifndef _FRACTION_H_ // "If not defined"
#define _FRACTION_H_ // Define the symbol

// C++ allows multiple constructors; the first Fraction(); is the 'default'

class Fraction {
public:	// Things accessible to any code in your program
	Fraction(); // Initialize to 1/1
	Fraction(const int& numerator, const int& denominator);

	int getNumerator() const;	// const indicates that this method does not alter the data member
	int getDenominator() const;
	
	

private:	// Data members (and sometimes methods) only meant for use within the function
	int mNumerator;	// The m stands for (data) member
	int mDenominator;
}; // <-- Don't forget this semicolon

#endif /* _FRACTION_H_ */ // If _FRACTION_H_ is already defined, skip to here.
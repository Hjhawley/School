
Please enter clauses (blank line to end the database):
tokens: [parent ( shmi , vader ) .]
clause: parent(shmi,vader).

tokens: [parent ( ruweee , padme ) .]
clause: parent(ruweee,padme).

tokens: [parent ( jobal , padme ) .]
clause: parent(jobal,padme).

tokens: [parent ( vader , luke ) .]
clause: parent(vader,luke).

tokens: [parent ( vader , leia ) .]
clause: parent(vader,leia).

tokens: [parent ( padme , luke ) .]
clause: parent(padme,luke).

tokens: [parent ( padme , leia ) .]
clause: parent(padme,leia).

tokens: [parent ( luke , ben ) .]
clause: parent(luke,ben).

tokens: [parent ( mara , ben ) .]
clause: parent(mara,ben).

tokens: [parent ( leia , jaina ) .]
clause: parent(leia,jaina).

tokens: [parent ( leia , jacen ) .]
clause: parent(leia,jacen).

tokens: [parent ( leia , anakin ) .]
clause: parent(leia,anakin).

tokens: [parent ( han , jaina ) .]
clause: parent(han,jaina).

tokens: [parent ( han , jacen ) .]
clause: parent(han,jacen).

tokens: [parent ( han , anakin ) .]
clause: parent(han,anakin).

tokens: [female ( shmi ) .]
clause: female(shmi).

tokens: [female ( jobal ) .]
clause: female(jobal).

tokens: [female ( padme ) .]
clause: female(padme).

tokens: [female ( mara ) .]
clause: female(mara).

tokens: [female ( leia ) .]
clause: female(leia).

tokens: [female ( jaina ) .]
clause: female(jaina).

tokens: [male ( ruweee ) .]
clause: male(ruweee).

tokens: [male ( vader ) .]
clause: male(vader).

tokens: [male ( luke ) .]
clause: male(luke).

tokens: [male ( han ) .]
clause: male(han).

tokens: [male ( ben ) .]
clause: male(ben).

tokens: [male ( jacen ) .]
clause: male(jacen).

tokens: [male ( anakin ) .]
clause: male(anakin).

tokens: [mother ( X , Y ) :- female ( X ) , parent ( X , Y ) .]
clause: mother(X,Y) :- female(X), parent(X,Y).

tokens: [father ( X , Y ) :- male ( X ) , parent ( X , Y ) .]
clause: father(X,Y) :- male(X), parent(X,Y).

tokens: [grandson ( X , Y ) :- male ( X ) , parent ( P , X ) , parent ( Y , P ) .]
clause: grandson(X,Y) :- male(X), parent(P,X), parent(Y,P).

tokens: [descendent ( X , Y ) :- parent ( Y , X ) .]
clause: descendent(X,Y) :- parent(Y,X).

tokens: [descendent ( X , Y ) :- parent ( P , X ) , descendent ( P , Y ) .]
clause: descendent(X,Y) :- parent(P,X), descendent(P,Y).

Please enter a query (blank line to quit):

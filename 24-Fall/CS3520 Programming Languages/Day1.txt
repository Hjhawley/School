Programming Languages

SMoL - standard model of languages (Racket)
Interpreters

Often when a new language is created it's to scratch a particular itch.
It's important to understand what problems a language was intended to solve.
For example:

Rust cares a lot about SAFETY. Memory safety, etc.
Prevention of buffer overflows (a common problem in C)
"Dangling pointers", "garbage collection"

But Python and most other modern languages also handle this. so what else does Rust do?
Low-level control over performance combined with high-level convenience and safety guarantees.
"Memory safety without heavy runtime" by preventing problems at compile time, not runtime
It has to do this by generating proofs that your code won't cause issues

https://learnxinyminutes.com/docs/rust/